/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsRouteImport } from './routes/terms'
import { Route as PrivacyRouteImport } from './routes/privacy'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as ModelRouteImport } from './routes/model'
import { Route as AboutRouteImport } from './routes/about'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as DashboardModelRouteImport } from './routes/dashboard/model'
import { Route as DashboardMessagesRouteImport } from './routes/dashboard/messages'
import { Route as DashboardMedicationRouteImport } from './routes/dashboard/medication'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as DashboardAdminRouteRouteImport } from './routes/dashboard/admin/route'
import { Route as DashboardAdminIndexRouteImport } from './routes/dashboard/admin/index'
import { Route as DashboardAdminMessagesRouteImport } from './routes/dashboard/admin/messages'
import { Route as DashboardAdminMedicationRouteImport } from './routes/dashboard/admin/medication'

const TermsRoute = TermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyRoute = PrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const ModelRoute = ModelRouteImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardModelRoute = DashboardModelRouteImport.update({
  id: '/model',
  path: '/model',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardMessagesRoute = DashboardMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardMedicationRoute = DashboardMedicationRouteImport.update({
  id: '/medication',
  path: '/medication',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardAdminRouteRoute = DashboardAdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAdminIndexRoute = DashboardAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardAdminRouteRoute,
} as any)
const DashboardAdminMessagesRoute = DashboardAdminMessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => DashboardAdminRouteRoute,
} as any)
const DashboardAdminMedicationRoute =
  DashboardAdminMedicationRouteImport.update({
    id: '/medication',
    path: '/medication',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/model': typeof ModelRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/auth/verify': typeof AuthVerifyRoute
  '/dashboard/medication': typeof DashboardMedicationRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/model': typeof DashboardModelRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/medication': typeof DashboardAdminMedicationRoute
  '/dashboard/admin/messages': typeof DashboardAdminMessagesRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/model': typeof ModelRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/dashboard/medication': typeof DashboardMedicationRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/model': typeof DashboardModelRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/admin/medication': typeof DashboardAdminMedicationRoute
  '/dashboard/admin/messages': typeof DashboardAdminMessagesRoute
  '/dashboard/admin': typeof DashboardAdminIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/model': typeof ModelRoute
  '/pricing': typeof PricingRoute
  '/privacy': typeof PrivacyRoute
  '/terms': typeof TermsRoute
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/auth/verify': typeof AuthVerifyRoute
  '/dashboard/medication': typeof DashboardMedicationRoute
  '/dashboard/messages': typeof DashboardMessagesRoute
  '/dashboard/model': typeof DashboardModelRoute
  '/auth/': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/medication': typeof DashboardAdminMedicationRoute
  '/dashboard/admin/messages': typeof DashboardAdminMessagesRoute
  '/dashboard/admin/': typeof DashboardAdminIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/model'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/dashboard/admin'
    | '/auth/verify'
    | '/dashboard/medication'
    | '/dashboard/messages'
    | '/dashboard/model'
    | '/auth'
    | '/dashboard/'
    | '/dashboard/admin/medication'
    | '/dashboard/admin/messages'
    | '/dashboard/admin/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/model'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/auth/verify'
    | '/dashboard/medication'
    | '/dashboard/messages'
    | '/dashboard/model'
    | '/auth'
    | '/dashboard'
    | '/dashboard/admin/medication'
    | '/dashboard/admin/messages'
    | '/dashboard/admin'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/model'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/dashboard/admin'
    | '/auth/verify'
    | '/dashboard/medication'
    | '/dashboard/messages'
    | '/dashboard/model'
    | '/auth/'
    | '/dashboard/'
    | '/dashboard/admin/medication'
    | '/dashboard/admin/messages'
    | '/dashboard/admin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ModelRoute: typeof ModelRoute
  PricingRoute: typeof PricingRoute
  PrivacyRoute: typeof PrivacyRoute
  TermsRoute: typeof TermsRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms': {
      id: '/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof TermsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/model': {
      id: '/model'
      path: '/model'
      fullPath: '/model'
      preLoaderRoute: typeof ModelRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/model': {
      id: '/dashboard/model'
      path: '/model'
      fullPath: '/dashboard/model'
      preLoaderRoute: typeof DashboardModelRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/messages': {
      id: '/dashboard/messages'
      path: '/messages'
      fullPath: '/dashboard/messages'
      preLoaderRoute: typeof DashboardMessagesRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/medication': {
      id: '/dashboard/medication'
      path: '/medication'
      fullPath: '/dashboard/medication'
      preLoaderRoute: typeof DashboardMedicationRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/': {
      id: '/dashboard/admin/'
      path: '/'
      fullPath: '/dashboard/admin/'
      preLoaderRoute: typeof DashboardAdminIndexRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/messages': {
      id: '/dashboard/admin/messages'
      path: '/messages'
      fullPath: '/dashboard/admin/messages'
      preLoaderRoute: typeof DashboardAdminMessagesRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/medication': {
      id: '/dashboard/admin/medication'
      path: '/medication'
      fullPath: '/dashboard/admin/medication'
      preLoaderRoute: typeof DashboardAdminMedicationRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
  }
}

interface DashboardAdminRouteRouteChildren {
  DashboardAdminMedicationRoute: typeof DashboardAdminMedicationRoute
  DashboardAdminMessagesRoute: typeof DashboardAdminMessagesRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
}

const DashboardAdminRouteRouteChildren: DashboardAdminRouteRouteChildren = {
  DashboardAdminMedicationRoute: DashboardAdminMedicationRoute,
  DashboardAdminMessagesRoute: DashboardAdminMessagesRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
}

const DashboardAdminRouteRouteWithChildren =
  DashboardAdminRouteRoute._addFileChildren(DashboardAdminRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardAdminRouteRoute: typeof DashboardAdminRouteRouteWithChildren
  DashboardMedicationRoute: typeof DashboardMedicationRoute
  DashboardMessagesRoute: typeof DashboardMessagesRoute
  DashboardModelRoute: typeof DashboardModelRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAdminRouteRoute: DashboardAdminRouteRouteWithChildren,
  DashboardMedicationRoute: DashboardMedicationRoute,
  DashboardMessagesRoute: DashboardMessagesRoute,
  DashboardModelRoute: DashboardModelRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ModelRoute: ModelRoute,
  PricingRoute: PricingRoute,
  PrivacyRoute: PrivacyRoute,
  TermsRoute: TermsRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
